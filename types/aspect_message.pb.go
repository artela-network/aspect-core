// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aspect/v1/aspect_message.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxBytes uint32 `protobuf:"varint,1,opt,name=maxBytes,proto3" json:"maxBytes,omitempty"`
	MaxGas   int32  `protobuf:"varint,2,opt,name=maxGas,proto3" json:"maxGas,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetMaxBytes() uint32 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

func (x *Block) GetMaxGas() int32 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

type Evidence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxAgeNumBlocks uint32 `protobuf:"varint,1,opt,name=maxAgeNumBlocks,proto3" json:"maxAgeNumBlocks,omitempty"`
	MaxAgeDuration  string `protobuf:"bytes,2,opt,name=maxAgeDuration,proto3" json:"maxAgeDuration,omitempty"`
	MaxBytes        uint32 `protobuf:"varint,3,opt,name=maxBytes,proto3" json:"maxBytes,omitempty"`
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{1}
}

func (x *Evidence) GetMaxAgeNumBlocks() uint32 {
	if x != nil {
		return x.MaxAgeNumBlocks
	}
	return 0
}

func (x *Evidence) GetMaxAgeDuration() string {
	if x != nil {
		return x.MaxAgeDuration
	}
	return ""
}

func (x *Evidence) GetMaxBytes() uint32 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKeyTypes []string `protobuf:"bytes,1,rep,name=pubKeyTypes,proto3" json:"pubKeyTypes,omitempty"`
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{2}
}

func (x *Validator) GetPubKeyTypes() []string {
	if x != nil {
		return x.PubKeyTypes
	}
	return nil
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppVersion uint32 `protobuf:"varint,1,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{3}
}

func (x *Version) GetAppVersion() uint32 {
	if x != nil {
		return x.AppVersion
	}
	return 0
}

type ConsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *Block     `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Evidence  *Evidence  `protobuf:"bytes,2,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Validator *Validator `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
	Version   *Version   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ConsParams) Reset() {
	*x = ConsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsParams) ProtoMessage() {}

func (x *ConsParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsParams.ProtoReflect.Descriptor instead.
func (*ConsParams) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{4}
}

func (x *ConsParams) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ConsParams) GetEvidence() *Evidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *ConsParams) GetValidator() *Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *ConsParams) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type EvmParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvmDenom            string   `protobuf:"bytes,1,opt,name=evmDenom,proto3" json:"evmDenom,omitempty"`
	EnableCreate        bool     `protobuf:"varint,2,opt,name=enableCreate,proto3" json:"enableCreate,omitempty"`
	EnableCall          bool     `protobuf:"varint,3,opt,name=enableCall,proto3" json:"enableCall,omitempty"`
	ExtraEips           []uint32 `protobuf:"varint,4,rep,packed,name=extraEips,proto3" json:"extraEips,omitempty"`
	AllowUnprotectedTxs bool     `protobuf:"varint,5,opt,name=allowUnprotectedTxs,proto3" json:"allowUnprotectedTxs,omitempty"`
}

func (x *EvmParams) Reset() {
	*x = EvmParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmParams) ProtoMessage() {}

func (x *EvmParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmParams.ProtoReflect.Descriptor instead.
func (*EvmParams) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{5}
}

func (x *EvmParams) GetEvmDenom() string {
	if x != nil {
		return x.EvmDenom
	}
	return ""
}

func (x *EvmParams) GetEnableCreate() bool {
	if x != nil {
		return x.EnableCreate
	}
	return false
}

func (x *EvmParams) GetEnableCall() bool {
	if x != nil {
		return x.EnableCall
	}
	return false
}

func (x *EvmParams) GetExtraEips() []uint32 {
	if x != nil {
		return x.ExtraEips
	}
	return nil
}

func (x *EvmParams) GetAllowUnprotectedTxs() bool {
	if x != nil {
		return x.AllowUnprotectedTxs
	}
	return false
}

type Ethash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch                uint32   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	FullForkThreshold    string   `protobuf:"bytes,2,opt,name=fullForkThreshold,proto3" json:"fullForkThreshold,omitempty"`
	BlockReward          string   `protobuf:"bytes,3,opt,name=blockReward,proto3" json:"blockReward,omitempty"`
	DifficultyBombDelays []string `protobuf:"bytes,4,rep,name=difficultyBombDelays,proto3" json:"difficultyBombDelays,omitempty"`
	Inception            string   `protobuf:"bytes,5,opt,name=inception,proto3" json:"inception,omitempty"`
}

func (x *Ethash) Reset() {
	*x = Ethash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ethash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ethash) ProtoMessage() {}

func (x *Ethash) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ethash.ProtoReflect.Descriptor instead.
func (*Ethash) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{6}
}

func (x *Ethash) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Ethash) GetFullForkThreshold() string {
	if x != nil {
		return x.FullForkThreshold
	}
	return ""
}

func (x *Ethash) GetBlockReward() string {
	if x != nil {
		return x.BlockReward
	}
	return ""
}

func (x *Ethash) GetDifficultyBombDelays() []string {
	if x != nil {
		return x.DifficultyBombDelays
	}
	return nil
}

func (x *Ethash) GetInception() string {
	if x != nil {
		return x.Inception
	}
	return ""
}

type Clique struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period uint32 `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	Epoch  uint32 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *Clique) Reset() {
	*x = Clique{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clique) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clique) ProtoMessage() {}

func (x *Clique) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clique.ProtoReflect.Descriptor instead.
func (*Clique) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{7}
}

func (x *Clique) GetPeriod() uint32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Clique) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type ChainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId                       string  `protobuf:"bytes,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	HomesteadBlock                string  `protobuf:"bytes,2,opt,name=homesteadBlock,proto3" json:"homesteadBlock,omitempty"`
	DaoForkBlock                  string  `protobuf:"bytes,3,opt,name=daoForkBlock,proto3" json:"daoForkBlock,omitempty"`
	DaoForkSupport                bool    `protobuf:"varint,4,opt,name=daoForkSupport,proto3" json:"daoForkSupport,omitempty"`
	Eip150Block                   string  `protobuf:"bytes,5,opt,name=eip150Block,proto3" json:"eip150Block,omitempty"`
	Eip150Hash                    string  `protobuf:"bytes,6,opt,name=eip150Hash,proto3" json:"eip150Hash,omitempty"`
	Eip155Block                   string  `protobuf:"bytes,7,opt,name=eip155Block,proto3" json:"eip155Block,omitempty"`
	Eip158Block                   string  `protobuf:"bytes,8,opt,name=eip158Block,proto3" json:"eip158Block,omitempty"`
	ByzantiumBlock                string  `protobuf:"bytes,9,opt,name=byzantiumBlock,proto3" json:"byzantiumBlock,omitempty"`
	ConstantinopleBlock           string  `protobuf:"bytes,10,opt,name=constantinopleBlock,proto3" json:"constantinopleBlock,omitempty"`
	PetersburgBlock               string  `protobuf:"bytes,11,opt,name=petersburgBlock,proto3" json:"petersburgBlock,omitempty"`
	IstanbulBlock                 string  `protobuf:"bytes,12,opt,name=istanbulBlock,proto3" json:"istanbulBlock,omitempty"`
	MuirGlacierBlock              string  `protobuf:"bytes,13,opt,name=muirGlacierBlock,proto3" json:"muirGlacierBlock,omitempty"`
	BerlinBlock                   string  `protobuf:"bytes,14,opt,name=berlinBlock,proto3" json:"berlinBlock,omitempty"`
	LondonBlock                   string  `protobuf:"bytes,15,opt,name=londonBlock,proto3" json:"londonBlock,omitempty"`
	ArrowGlacierBlock             string  `protobuf:"bytes,16,opt,name=arrowGlacierBlock,proto3" json:"arrowGlacierBlock,omitempty"`
	GrayGlacierBlock              string  `protobuf:"bytes,17,opt,name=grayGlacierBlock,proto3" json:"grayGlacierBlock,omitempty"`
	MergeNetsplitBlock            string  `protobuf:"bytes,18,opt,name=mergeNetsplitBlock,proto3" json:"mergeNetsplitBlock,omitempty"`
	ShanghaiBlock                 string  `protobuf:"bytes,19,opt,name=shanghaiBlock,proto3" json:"shanghaiBlock,omitempty"`
	CancunBlock                   string  `protobuf:"bytes,20,opt,name=cancunBlock,proto3" json:"cancunBlock,omitempty"`
	TerminalTotalDifficulty       string  `protobuf:"bytes,21,opt,name=terminalTotalDifficulty,proto3" json:"terminalTotalDifficulty,omitempty"`
	TerminalTotalDifficultyPassed bool    `protobuf:"varint,22,opt,name=terminalTotalDifficultyPassed,proto3" json:"terminalTotalDifficultyPassed,omitempty"`
	Ethash                        *Ethash `protobuf:"bytes,23,opt,name=ethash,proto3" json:"ethash,omitempty"`
	Clique                        *Clique `protobuf:"bytes,24,opt,name=clique,proto3" json:"clique,omitempty"`
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{8}
}

func (x *ChainConfig) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ChainConfig) GetHomesteadBlock() string {
	if x != nil {
		return x.HomesteadBlock
	}
	return ""
}

func (x *ChainConfig) GetDaoForkBlock() string {
	if x != nil {
		return x.DaoForkBlock
	}
	return ""
}

func (x *ChainConfig) GetDaoForkSupport() bool {
	if x != nil {
		return x.DaoForkSupport
	}
	return false
}

func (x *ChainConfig) GetEip150Block() string {
	if x != nil {
		return x.Eip150Block
	}
	return ""
}

func (x *ChainConfig) GetEip150Hash() string {
	if x != nil {
		return x.Eip150Hash
	}
	return ""
}

func (x *ChainConfig) GetEip155Block() string {
	if x != nil {
		return x.Eip155Block
	}
	return ""
}

func (x *ChainConfig) GetEip158Block() string {
	if x != nil {
		return x.Eip158Block
	}
	return ""
}

func (x *ChainConfig) GetByzantiumBlock() string {
	if x != nil {
		return x.ByzantiumBlock
	}
	return ""
}

func (x *ChainConfig) GetConstantinopleBlock() string {
	if x != nil {
		return x.ConstantinopleBlock
	}
	return ""
}

func (x *ChainConfig) GetPetersburgBlock() string {
	if x != nil {
		return x.PetersburgBlock
	}
	return ""
}

func (x *ChainConfig) GetIstanbulBlock() string {
	if x != nil {
		return x.IstanbulBlock
	}
	return ""
}

func (x *ChainConfig) GetMuirGlacierBlock() string {
	if x != nil {
		return x.MuirGlacierBlock
	}
	return ""
}

func (x *ChainConfig) GetBerlinBlock() string {
	if x != nil {
		return x.BerlinBlock
	}
	return ""
}

func (x *ChainConfig) GetLondonBlock() string {
	if x != nil {
		return x.LondonBlock
	}
	return ""
}

func (x *ChainConfig) GetArrowGlacierBlock() string {
	if x != nil {
		return x.ArrowGlacierBlock
	}
	return ""
}

func (x *ChainConfig) GetGrayGlacierBlock() string {
	if x != nil {
		return x.GrayGlacierBlock
	}
	return ""
}

func (x *ChainConfig) GetMergeNetsplitBlock() string {
	if x != nil {
		return x.MergeNetsplitBlock
	}
	return ""
}

func (x *ChainConfig) GetShanghaiBlock() string {
	if x != nil {
		return x.ShanghaiBlock
	}
	return ""
}

func (x *ChainConfig) GetCancunBlock() string {
	if x != nil {
		return x.CancunBlock
	}
	return ""
}

func (x *ChainConfig) GetTerminalTotalDifficulty() string {
	if x != nil {
		return x.TerminalTotalDifficulty
	}
	return ""
}

func (x *ChainConfig) GetTerminalTotalDifficultyPassed() bool {
	if x != nil {
		return x.TerminalTotalDifficultyPassed
	}
	return false
}

func (x *ChainConfig) GetEthash() *Ethash {
	if x != nil {
		return x.Ethash
	}
	return nil
}

func (x *ChainConfig) GetClique() *Clique {
	if x != nil {
		return x.Clique
	}
	return nil
}

type EnvContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoinBase string `protobuf:"bytes,4,opt,name=coinBase,proto3" json:"coinBase,omitempty"`
	BaseFee  uint32 `protobuf:"varint,5,opt,name=baseFee,proto3" json:"baseFee,omitempty"`
}

func (x *EnvContent) Reset() {
	*x = EnvContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v1_aspect_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvContent) ProtoMessage() {}

func (x *EnvContent) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v1_aspect_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvContent.ProtoReflect.Descriptor instead.
func (*EnvContent) Descriptor() ([]byte, []int) {
	return file_aspect_v1_aspect_message_proto_rawDescGZIP(), []int{9}
}

func (x *EnvContent) GetCoinBase() string {
	if x != nil {
		return x.CoinBase
	}
	return ""
}

func (x *EnvContent) GetBaseFee() uint32 {
	if x != nil {
		return x.BaseFee
	}
	return 0
}

var File_aspect_v1_aspect_message_proto protoreflect.FileDescriptor

var file_aspect_v1_aspect_message_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x61, 0x78, 0x47, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78,
	0x47, 0x61, 0x73, 0x22, 0x78, 0x0a, 0x08, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x78,
	0x41, 0x67, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x2d, 0x0a,
	0x09, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x75,
	0x62, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2f,
	0x0a, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0xbb, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x76, 0x6d, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x76, 0x6d, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x0c, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x45, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x45, 0x69, 0x70, 0x73, 0x12, 0x30, 0x0a,
	0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x54, 0x78, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x78, 0x73, 0x22,
	0xc0, 0x01, 0x0a, 0x06, 0x45, 0x74, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x2c, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x66, 0x75, 0x6c,
	0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x42, 0x6f,
	0x6d, 0x62, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14,
	0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x42, 0x6f, 0x6d, 0x62, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x71, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0xe3, 0x07, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x61,
	0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72,
	0x6b, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x69, 0x70, 0x31,
	0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x69, 0x70, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x69,
	0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x69, 0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x69,
	0x70, 0x31, 0x35, 0x35, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26,
	0x0a, 0x0e, 0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75,
	0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f,
	0x70, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x65, 0x74, 0x65, 0x72, 0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x62, 0x75, 0x6c, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x62, 0x75, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x75, 0x69, 0x72,
	0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6d, 0x75, 0x69, 0x72, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x72, 0x6c, 0x69,
	0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x6e,
	0x64, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x72, 0x72, 0x6f,
	0x77, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65,
	0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x72, 0x61, 0x79, 0x47, 0x6c,
	0x61, 0x63, 0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x67, 0x72, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x73, 0x70,
	0x6c, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x69, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x6e, 0x67,
	0x68, 0x61, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63,
	0x75, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x61, 0x6e, 0x63, 0x75, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x1d, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x74,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x61, 0x73, 0x68, 0x52, 0x06, 0x65,
	0x74, 0x68, 0x61, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x71, 0x75, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6c, 0x69, 0x71, 0x75, 0x65, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x71, 0x75, 0x65,
	0x22, 0x42, 0x0a, 0x0a, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x46, 0x65, 0x65, 0x42, 0x93, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x12, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x6c, 0x61, 0x2d,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x6c, 0x61, 0x73, 0x64,
	0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x09,
	0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x41, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a,
	0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_aspect_v1_aspect_message_proto_rawDescOnce sync.Once
	file_aspect_v1_aspect_message_proto_rawDescData = file_aspect_v1_aspect_message_proto_rawDesc
)

func file_aspect_v1_aspect_message_proto_rawDescGZIP() []byte {
	file_aspect_v1_aspect_message_proto_rawDescOnce.Do(func() {
		file_aspect_v1_aspect_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_aspect_v1_aspect_message_proto_rawDescData)
	})
	return file_aspect_v1_aspect_message_proto_rawDescData
}

var file_aspect_v1_aspect_message_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_aspect_v1_aspect_message_proto_goTypes = []interface{}{
	(*Block)(nil),       // 0: aspect.v1.Block
	(*Evidence)(nil),    // 1: aspect.v1.Evidence
	(*Validator)(nil),   // 2: aspect.v1.Validator
	(*Version)(nil),     // 3: aspect.v1.Version
	(*ConsParams)(nil),  // 4: aspect.v1.ConsParams
	(*EvmParams)(nil),   // 5: aspect.v1.EvmParams
	(*Ethash)(nil),      // 6: aspect.v1.Ethash
	(*Clique)(nil),      // 7: aspect.v1.Clique
	(*ChainConfig)(nil), // 8: aspect.v1.ChainConfig
	(*EnvContent)(nil),  // 9: aspect.v1.EnvContent
}
var file_aspect_v1_aspect_message_proto_depIdxs = []int32{
	0, // 0: aspect.v1.ConsParams.block:type_name -> aspect.v1.Block
	1, // 1: aspect.v1.ConsParams.evidence:type_name -> aspect.v1.Evidence
	2, // 2: aspect.v1.ConsParams.validator:type_name -> aspect.v1.Validator
	3, // 3: aspect.v1.ConsParams.version:type_name -> aspect.v1.Version
	6, // 4: aspect.v1.ChainConfig.ethash:type_name -> aspect.v1.Ethash
	7, // 5: aspect.v1.ChainConfig.clique:type_name -> aspect.v1.Clique
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_aspect_v1_aspect_message_proto_init() }
func file_aspect_v1_aspect_message_proto_init() {
	if File_aspect_v1_aspect_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aspect_v1_aspect_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Evidence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ethash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clique); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v1_aspect_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aspect_v1_aspect_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aspect_v1_aspect_message_proto_goTypes,
		DependencyIndexes: file_aspect_v1_aspect_message_proto_depIdxs,
		MessageInfos:      file_aspect_v1_aspect_message_proto_msgTypes,
	}.Build()
	File_aspect_v1_aspect_message_proto = out.File
	file_aspect_v1_aspect_message_proto_rawDesc = nil
	file_aspect_v1_aspect_message_proto_goTypes = nil
	file_aspect_v1_aspect_message_proto_depIdxs = nil
}
