// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aspect/v2/base_message.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GasInfo defines tx execution gas context.
type GasInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// GasWanted is the maximum units of work we allow this tx to perform.
	GasWanted uint64 `protobuf:"varint,1,opt,name=gas_wanted,json=gasWanted,proto3" json:"gas_wanted,omitempty"`
	// GasUsed is the amount of gas actually consumed.
	GasUsed uint64 `protobuf:"varint,2,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
}

func (x *GasInfo) Reset() {
	*x = GasInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasInfo) ProtoMessage() {}

func (x *GasInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasInfo.ProtoReflect.Descriptor instead.
func (*GasInfo) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{0}
}

func (x *GasInfo) GetGasWanted() uint64 {
	if x != nil {
		return x.GasWanted
	}
	return 0
}

func (x *GasInfo) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

type JoinPointResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasInfo       *GasInfo                   `protobuf:"bytes,1,opt,name=gas_info,json=gasInfo,proto3" json:"gas_info,omitempty"`
	TxHash        string                     `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	ExecResultMap map[string]*AspectResponse `protobuf:"bytes,3,rep,name=exec_result_map,json=execResultMap,proto3" json:"exec_result_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *JoinPointResult) Reset() {
	*x = JoinPointResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinPointResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinPointResult) ProtoMessage() {}

func (x *JoinPointResult) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinPointResult.ProtoReflect.Descriptor instead.
func (*JoinPointResult) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{1}
}

func (x *JoinPointResult) GetGasInfo() *GasInfo {
	if x != nil {
		return x.GasInfo
	}
	return nil
}

func (x *JoinPointResult) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *JoinPointResult) GetExecResultMap() map[string]*AspectResponse {
	if x != nil {
		return x.ExecResultMap
	}
	return nil
}

type EthTxAspect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx          *EthTransaction      `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	CurrInnerTx *EthStackTransaction `protobuf:"bytes,2,opt,name=curr_inner_tx,json=currInnerTx,proto3" json:"curr_inner_tx,omitempty"`
}

func (x *EthTxAspect) Reset() {
	*x = EthTxAspect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthTxAspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthTxAspect) ProtoMessage() {}

func (x *EthTxAspect) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthTxAspect.ProtoReflect.Descriptor instead.
func (*EthTxAspect) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{2}
}

func (x *EthTxAspect) GetTx() *EthTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *EthTxAspect) GetCurrInnerTx() *EthStackTransaction {
	if x != nil {
		return x.CurrInnerTx
	}
	return nil
}

type EthBlockAspect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *EthBlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *EthBlockAspect) Reset() {
	*x = EthBlockAspect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthBlockAspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthBlockAspect) ProtoMessage() {}

func (x *EthBlockAspect) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthBlockAspect.ProtoReflect.Descriptor instead.
func (*EthBlockAspect) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{3}
}

func (x *EthBlockAspect) GetHeader() *EthBlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

type AspectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          *RunResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	DataMessageType string     `protobuf:"bytes,2,opt,name=data_message_type,json=dataMessageType,proto3" json:"data_message_type,omitempty"`
	Data            *anypb.Any `protobuf:"bytes,3,opt,name=data,proto3,oneof" json:"data,omitempty"`
}

func (x *AspectResponse) Reset() {
	*x = AspectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AspectResponse) ProtoMessage() {}

func (x *AspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AspectResponse.ProtoReflect.Descriptor instead.
func (*AspectResponse) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{4}
}

func (x *AspectResponse) GetResult() *RunResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *AspectResponse) GetDataMessageType() string {
	if x != nil {
		return x.DataMessageType
	}
	return ""
}

func (x *AspectResponse) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type EthTxQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasLimitGt uint64 `protobuf:"varint,1,opt,name=gas_limit_gt,json=gasLimitGt,proto3" json:"gas_limit_gt,omitempty"`
}

func (x *EthTxQuery) Reset() {
	*x = EthTxQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthTxQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthTxQuery) ProtoMessage() {}

func (x *EthTxQuery) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthTxQuery.ProtoReflect.Descriptor instead.
func (*EthTxQuery) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{5}
}

func (x *EthTxQuery) GetGasLimitGt() uint64 {
	if x != nil {
		return x.GasLimitGt
	}
	return 0
}

// like RPCTransaction
type EthTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash   []byte `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockNumber int64  `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	From        string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// gas defines the gas limit defined for the transaction.
	Gas      uint64 `protobuf:"varint,4,opt,name=gas,proto3" json:"gas,omitempty"`
	GasPrice string `protobuf:"bytes,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	// gas_fee_cap defines the max value for the gas fee
	GasFeeCap string `protobuf:"bytes,6,opt,name=gas_fee_cap,json=gasFeeCap,proto3" json:"gas_fee_cap,omitempty"`
	// gas_tip_cap defines the max value for the gas tip
	GasTipCap string `protobuf:"bytes,7,opt,name=gas_tip_cap,json=gasTipCap,proto3" json:"gas_tip_cap,omitempty"`
	Hash      []byte `protobuf:"bytes,8,opt,name=hash,proto3" json:"hash,omitempty"`
	// data is the data payload bytes of the transaction.
	Input []byte `protobuf:"bytes,9,opt,name=input,proto3" json:"input,omitempty"`
	// nonce corresponds to the account nonce (transaction sequence).
	Nonce uint64 `protobuf:"varint,10,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// to is the hex formatted address of the recipient
	To               string `protobuf:"bytes,11,opt,name=to,proto3" json:"to,omitempty"`
	TransactionIndex int64  `protobuf:"varint,12,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index,omitempty"`
	// value defines the the transaction amount.
	Value string `protobuf:"bytes,13,opt,name=value,proto3" json:"value,omitempty"`
	Type  int32  `protobuf:"varint,14,opt,name=type,proto3" json:"type,omitempty"`
	// accesses is an array of access tuples
	AccessList []*EthAccessTuple `protobuf:"bytes,15,rep,name=access_list,json=accessList,proto3" json:"access_list,omitempty"`
	// chain_id of the destination EVM chain
	ChainId string `protobuf:"bytes,16,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// v defines the signature value
	V []byte `protobuf:"bytes,17,opt,name=v,proto3" json:"v,omitempty"`
	// r defines the signature value
	R []byte `protobuf:"bytes,18,opt,name=r,proto3" json:"r,omitempty"`
	// s define the signature value
	S []byte `protobuf:"bytes,19,opt,name=s,proto3" json:"s,omitempty"`
}

func (x *EthTransaction) Reset() {
	*x = EthTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthTransaction) ProtoMessage() {}

func (x *EthTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthTransaction.ProtoReflect.Descriptor instead.
func (*EthTransaction) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{6}
}

func (x *EthTransaction) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *EthTransaction) GetBlockNumber() int64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *EthTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EthTransaction) GetGas() uint64 {
	if x != nil {
		return x.Gas
	}
	return 0
}

func (x *EthTransaction) GetGasPrice() string {
	if x != nil {
		return x.GasPrice
	}
	return ""
}

func (x *EthTransaction) GetGasFeeCap() string {
	if x != nil {
		return x.GasFeeCap
	}
	return ""
}

func (x *EthTransaction) GetGasTipCap() string {
	if x != nil {
		return x.GasTipCap
	}
	return ""
}

func (x *EthTransaction) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *EthTransaction) GetInput() []byte {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *EthTransaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EthTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EthTransaction) GetTransactionIndex() int64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *EthTransaction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EthTransaction) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *EthTransaction) GetAccessList() []*EthAccessTuple {
	if x != nil {
		return x.AccessList
	}
	return nil
}

func (x *EthTransaction) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *EthTransaction) GetV() []byte {
	if x != nil {
		return x.V
	}
	return nil
}

func (x *EthTransaction) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *EthTransaction) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

type EthStackTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From          string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Data          []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Value         string   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Gas           string   `protobuf:"bytes,5,opt,name=gas,proto3" json:"gas,omitempty"`
	Ret           []byte   `protobuf:"bytes,6,opt,name=ret,proto3" json:"ret,omitempty"`
	LeftOverGas   uint64   `protobuf:"varint,7,opt,name=leftOverGas,proto3" json:"leftOverGas,omitempty"`
	Index         uint64   `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	ParentIndex   uint64   `protobuf:"varint,9,opt,name=parentIndex,proto3" json:"parentIndex,omitempty"`
	ChildrenIndex []uint64 `protobuf:"varint,10,rep,packed,name=childrenIndex,proto3" json:"childrenIndex,omitempty"`
}

func (x *EthStackTransaction) Reset() {
	*x = EthStackTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthStackTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthStackTransaction) ProtoMessage() {}

func (x *EthStackTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthStackTransaction.ProtoReflect.Descriptor instead.
func (*EthStackTransaction) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{7}
}

func (x *EthStackTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EthStackTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EthStackTransaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EthStackTransaction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EthStackTransaction) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

func (x *EthStackTransaction) GetRet() []byte {
	if x != nil {
		return x.Ret
	}
	return nil
}

func (x *EthStackTransaction) GetLeftOverGas() uint64 {
	if x != nil {
		return x.LeftOverGas
	}
	return 0
}

func (x *EthStackTransaction) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *EthStackTransaction) GetParentIndex() uint64 {
	if x != nil {
		return x.ParentIndex
	}
	return 0
}

func (x *EthStackTransaction) GetChildrenIndex() []uint64 {
	if x != nil {
		return x.ChildrenIndex
	}
	return nil
}

type EthInnerTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To    string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Data  []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Gas   string `protobuf:"bytes,5,opt,name=gas,proto3" json:"gas,omitempty"`
}

func (x *EthInnerTransaction) Reset() {
	*x = EthInnerTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthInnerTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthInnerTransaction) ProtoMessage() {}

func (x *EthInnerTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthInnerTransaction.ProtoReflect.Descriptor instead.
func (*EthInnerTransaction) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{8}
}

func (x *EthInnerTransaction) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *EthInnerTransaction) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *EthInnerTransaction) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EthInnerTransaction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EthInnerTransaction) GetGas() string {
	if x != nil {
		return x.Gas
	}
	return ""
}

// AccessTuple is the element type of an access list.
type EthAccessTuple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address is a hex formatted ethereum address
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// storage_keys are hex formatted hashes of the storage keys
	StorageKeys []string `protobuf:"bytes,2,rep,name=storage_keys,json=storageKeys,proto3" json:"storage_keys,omitempty"`
}

func (x *EthAccessTuple) Reset() {
	*x = EthAccessTuple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthAccessTuple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthAccessTuple) ProtoMessage() {}

func (x *EthAccessTuple) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthAccessTuple.ProtoReflect.Descriptor instead.
func (*EthAccessTuple) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{9}
}

func (x *EthAccessTuple) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EthAccessTuple) GetStorageKeys() []string {
	if x != nil {
		return x.StorageKeys
	}
	return nil
}

type EthLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address of the contract that generated the event
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// topics is a list of topics provided by the contract.
	Topics []string `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	// data which is supplied by the contract, usually ABI-encoded
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// block_number of the block in which the transaction was included
	BlockNumber uint64 `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	// tx_hash is the transaction hash
	TxHash string `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// tx_index of the transaction in the block
	TxIndex uint64 `protobuf:"varint,6,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	// block_hash of the block in which the transaction was included
	BlockHash string `protobuf:"bytes,7,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// index of the log in the block
	Index uint64 `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	// removed is true if this log was reverted due to a chain
	// reorganisation. You must pay attention to this field if you receive logs
	// through a filter query.
	Removed bool `protobuf:"varint,9,opt,name=removed,proto3" json:"removed,omitempty"`
}

func (x *EthLog) Reset() {
	*x = EthLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthLog) ProtoMessage() {}

func (x *EthLog) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthLog.ProtoReflect.Descriptor instead.
func (*EthLog) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{10}
}

func (x *EthLog) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EthLog) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *EthLog) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EthLog) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *EthLog) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *EthLog) GetTxIndex() uint64 {
	if x != nil {
		return x.TxIndex
	}
	return 0
}

func (x *EthLog) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *EthLog) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *EthLog) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

type EthReceipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Consensus fields: These fields are defined by the Yellow Paper
	Type              uint32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	PostState         []byte    `protobuf:"bytes,2,opt,name=post_state,json=postState,proto3" json:"post_state,omitempty"`
	Status            uint64    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	CumulativeGasUsed uint64    `protobuf:"varint,4,opt,name=cumulative_gas_used,json=cumulativeGasUsed,proto3" json:"cumulative_gas_used,omitempty"`
	LogsBloom         []byte    `protobuf:"bytes,5,opt,name=logs_bloom,json=logsBloom,proto3" json:"logs_bloom,omitempty"`
	Logs              []*EthLog `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`
	// implementation fields: these fields are added by geth when processing a transaction.
	// they are stored in the chain database.
	TxHash          string `protobuf:"bytes,7,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	ContractAddress string `protobuf:"bytes,8,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	GasUsed         uint64 `protobuf:"varint,9,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	// inclusion information: these fields provide information about the inclusion of the
	// transaction corresponding to this receipt.
	BlockHash        string `protobuf:"bytes,10,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockNumber      string `protobuf:"bytes,11,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TransactionIndex uint32 `protobuf:"varint,12,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index,omitempty"`
}

func (x *EthReceipt) Reset() {
	*x = EthReceipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthReceipt) ProtoMessage() {}

func (x *EthReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthReceipt.ProtoReflect.Descriptor instead.
func (*EthReceipt) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{11}
}

func (x *EthReceipt) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *EthReceipt) GetPostState() []byte {
	if x != nil {
		return x.PostState
	}
	return nil
}

func (x *EthReceipt) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *EthReceipt) GetCumulativeGasUsed() uint64 {
	if x != nil {
		return x.CumulativeGasUsed
	}
	return 0
}

func (x *EthReceipt) GetLogsBloom() []byte {
	if x != nil {
		return x.LogsBloom
	}
	return nil
}

func (x *EthReceipt) GetLogs() []*EthLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *EthReceipt) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *EthReceipt) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *EthReceipt) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *EthReceipt) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *EthReceipt) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *EthReceipt) GetTransactionIndex() uint32 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

// wasm runner result
type RunResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RunResult) Reset() {
	*x = RunResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResult) ProtoMessage() {}

func (x *RunResult) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResult.ProtoReflect.Descriptor instead.
func (*RunResult) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{12}
}

func (x *RunResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type EthBlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash       string `protobuf:"bytes,1,opt,name=parentHash,proto3" json:"parentHash,omitempty"`
	UncleHash        string `protobuf:"bytes,2,opt,name=uncleHash,proto3" json:"uncleHash,omitempty"`
	Coinbase         string `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	StateRoot        string `protobuf:"bytes,4,opt,name=stateRoot,proto3" json:"stateRoot,omitempty"`
	TransactionsRoot string `protobuf:"bytes,5,opt,name=transactionsRoot,proto3" json:"transactionsRoot,omitempty"`
	ReceiptHash      string `protobuf:"bytes,6,opt,name=receiptHash,proto3" json:"receiptHash,omitempty"`
	Difficulty       uint64 `protobuf:"varint,7,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Number           uint64 `protobuf:"varint,8,opt,name=number,proto3" json:"number,omitempty"`
	GasLimit         uint64 `protobuf:"varint,9,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasUsed          uint64 `protobuf:"varint,10,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	Timestamp        uint64 `protobuf:"varint,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ExtraData        []byte `protobuf:"bytes,12,opt,name=extraData,proto3" json:"extraData,omitempty"`
	MixHash          []byte `protobuf:"bytes,13,opt,name=mixHash,proto3" json:"mixHash,omitempty"`
	Nonce            uint64 `protobuf:"varint,14,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// BaseFee was added by EIP-1559 and is ignored in legacy headers.
	BaseFee uint64 `protobuf:"varint,15,opt,name=baseFee,proto3" json:"baseFee,omitempty"`
	// WithdrawalsHash was added by EIP-4895 and is ignored in legacy headers.
	WithdrawalsRoot string `protobuf:"bytes,16,opt,name=withdrawalsRoot,proto3" json:"withdrawalsRoot,omitempty"`
	// ExcessDataGas was added by EIP-4844 and is ignored in legacy headers.
	ExcessDataGas string `protobuf:"bytes,17,opt,name=excessDataGas,proto3" json:"excessDataGas,omitempty"`
}

func (x *EthBlockHeader) Reset() {
	*x = EthBlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_base_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthBlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthBlockHeader) ProtoMessage() {}

func (x *EthBlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_base_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthBlockHeader.ProtoReflect.Descriptor instead.
func (*EthBlockHeader) Descriptor() ([]byte, []int) {
	return file_aspect_v2_base_message_proto_rawDescGZIP(), []int{13}
}

func (x *EthBlockHeader) GetParentHash() string {
	if x != nil {
		return x.ParentHash
	}
	return ""
}

func (x *EthBlockHeader) GetUncleHash() string {
	if x != nil {
		return x.UncleHash
	}
	return ""
}

func (x *EthBlockHeader) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *EthBlockHeader) GetStateRoot() string {
	if x != nil {
		return x.StateRoot
	}
	return ""
}

func (x *EthBlockHeader) GetTransactionsRoot() string {
	if x != nil {
		return x.TransactionsRoot
	}
	return ""
}

func (x *EthBlockHeader) GetReceiptHash() string {
	if x != nil {
		return x.ReceiptHash
	}
	return ""
}

func (x *EthBlockHeader) GetDifficulty() uint64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *EthBlockHeader) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *EthBlockHeader) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *EthBlockHeader) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *EthBlockHeader) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EthBlockHeader) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *EthBlockHeader) GetMixHash() []byte {
	if x != nil {
		return x.MixHash
	}
	return nil
}

func (x *EthBlockHeader) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *EthBlockHeader) GetBaseFee() uint64 {
	if x != nil {
		return x.BaseFee
	}
	return 0
}

func (x *EthBlockHeader) GetWithdrawalsRoot() string {
	if x != nil {
		return x.WithdrawalsRoot
	}
	return ""
}

func (x *EthBlockHeader) GetExcessDataGas() string {
	if x != nil {
		return x.ExcessDataGas
	}
	return ""
}

var File_aspect_v2_base_message_proto protoreflect.FileDescriptor

var file_aspect_v2_base_message_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x07, 0x47, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x73, 0x5f, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x61, 0x73, 0x57, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x22, 0x8d, 0x02, 0x0a, 0x0f, 0x4a, 0x6f,
	0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2d, 0x0a,
	0x08, 0x67, 0x61, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x61, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x67, 0x61, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x55, 0x0a, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x5b, 0x0a, 0x12,
	0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e,
	0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7c, 0x0a, 0x0b, 0x45, 0x74, 0x68,
	0x54, 0x78, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x02, 0x74, 0x78, 0x12, 0x42, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x74, 0x68, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x78, 0x22, 0x43, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x74, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0xa2, 0x01, 0x0a,
	0x0e, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x2e, 0x0a, 0x0a, 0x45, 0x74, 0x68, 0x54, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x20, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x67, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x47,
	0x74, 0x22, 0xfd, 0x03, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x61, 0x73,
	0x5f, 0x66, 0x65, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x61, 0x73, 0x46, 0x65, 0x65, 0x43, 0x61, 0x70, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x61, 0x73,
	0x5f, 0x74, 0x69, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x61, 0x73, 0x54, 0x69, 0x70, 0x43, 0x61, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3a, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x75, 0x70, 0x6c, 0x65,
	0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x01, 0x76, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01,
	0x73, 0x22, 0x87, 0x02, 0x0a, 0x13, 0x45, 0x74, 0x68, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x65, 0x66, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x47, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x75, 0x0a, 0x13, 0x45,
	0x74, 0x68, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67,
	0x61, 0x73, 0x22, 0x4d, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x75, 0x70, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0xf4, 0x01, 0x0a, 0x06, 0x45, 0x74, 0x68, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x78, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x22, 0x9b, 0x03, 0x0a, 0x0a, 0x45, 0x74, 0x68,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x47, 0x61, 0x73, 0x55, 0x73,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f,
	0x6d, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x74, 0x68, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x3f, 0x0a, 0x09, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9a, 0x04, 0x0a, 0x0e, 0x45, 0x74, 0x68, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e,
	0x63, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x6e, 0x63, 0x6c, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x69, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x73,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x47, 0x61, 0x73, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x61, 0x73, 0x42, 0x91, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x42, 0x10, 0x42, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x6c, 0x61, 0x2d, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x6c, 0x61, 0x73, 0x64, 0x6b, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x41, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x09, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x5c, 0x56, 0x32, 0xe2, 0x02, 0x15, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x5c, 0x56, 0x32, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x41, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aspect_v2_base_message_proto_rawDescOnce sync.Once
	file_aspect_v2_base_message_proto_rawDescData = file_aspect_v2_base_message_proto_rawDesc
)

func file_aspect_v2_base_message_proto_rawDescGZIP() []byte {
	file_aspect_v2_base_message_proto_rawDescOnce.Do(func() {
		file_aspect_v2_base_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_aspect_v2_base_message_proto_rawDescData)
	})
	return file_aspect_v2_base_message_proto_rawDescData
}

var file_aspect_v2_base_message_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_aspect_v2_base_message_proto_goTypes = []interface{}{
	(*GasInfo)(nil),             // 0: aspect.v2.GasInfo
	(*JoinPointResult)(nil),     // 1: aspect.v2.JoinPointResult
	(*EthTxAspect)(nil),         // 2: aspect.v2.EthTxAspect
	(*EthBlockAspect)(nil),      // 3: aspect.v2.EthBlockAspect
	(*AspectResponse)(nil),      // 4: aspect.v2.AspectResponse
	(*EthTxQuery)(nil),          // 5: aspect.v2.EthTxQuery
	(*EthTransaction)(nil),      // 6: aspect.v2.EthTransaction
	(*EthStackTransaction)(nil), // 7: aspect.v2.EthStackTransaction
	(*EthInnerTransaction)(nil), // 8: aspect.v2.EthInnerTransaction
	(*EthAccessTuple)(nil),      // 9: aspect.v2.EthAccessTuple
	(*EthLog)(nil),              // 10: aspect.v2.EthLog
	(*EthReceipt)(nil),          // 11: aspect.v2.EthReceipt
	(*RunResult)(nil),           // 12: aspect.v2.RunResult
	(*EthBlockHeader)(nil),      // 13: aspect.v2.EthBlockHeader
	nil,                         // 14: aspect.v2.JoinPointResult.ExecResultMapEntry
	(*anypb.Any)(nil),           // 15: google.protobuf.Any
}
var file_aspect_v2_base_message_proto_depIdxs = []int32{
	0,  // 0: aspect.v2.JoinPointResult.gas_info:type_name -> aspect.v2.GasInfo
	14, // 1: aspect.v2.JoinPointResult.exec_result_map:type_name -> aspect.v2.JoinPointResult.ExecResultMapEntry
	6,  // 2: aspect.v2.EthTxAspect.tx:type_name -> aspect.v2.EthTransaction
	7,  // 3: aspect.v2.EthTxAspect.curr_inner_tx:type_name -> aspect.v2.EthStackTransaction
	13, // 4: aspect.v2.EthBlockAspect.header:type_name -> aspect.v2.EthBlockHeader
	12, // 5: aspect.v2.AspectResponse.result:type_name -> aspect.v2.RunResult
	15, // 6: aspect.v2.AspectResponse.data:type_name -> google.protobuf.Any
	9,  // 7: aspect.v2.EthTransaction.access_list:type_name -> aspect.v2.EthAccessTuple
	10, // 8: aspect.v2.EthReceipt.logs:type_name -> aspect.v2.EthLog
	4,  // 9: aspect.v2.JoinPointResult.ExecResultMapEntry.value:type_name -> aspect.v2.AspectResponse
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_aspect_v2_base_message_proto_init() }
func file_aspect_v2_base_message_proto_init() {
	if File_aspect_v2_base_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aspect_v2_base_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinPointResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthTxAspect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthBlockAspect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AspectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthTxQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthStackTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthInnerTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthAccessTuple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthReceipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_base_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthBlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aspect_v2_base_message_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aspect_v2_base_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aspect_v2_base_message_proto_goTypes,
		DependencyIndexes: file_aspect_v2_base_message_proto_depIdxs,
		MessageInfos:      file_aspect_v2_base_message_proto_msgTypes,
	}.Build()
	File_aspect_v2_base_message_proto = out.File
	file_aspect_v2_base_message_proto_rawDesc = nil
	file_aspect_v2_base_message_proto_goTypes = nil
	file_aspect_v2_base_message_proto_depIdxs = nil
}
