// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: aspect/v2/cosmos_type.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EvidenceType int32

const (
	EvidenceType_UNKNOWN             EvidenceType = 0
	EvidenceType_DUPLICATE_VOTE      EvidenceType = 1
	EvidenceType_LIGHT_CLIENT_ATTACK EvidenceType = 2
)

// Enum value maps for EvidenceType.
var (
	EvidenceType_name = map[int32]string{
		0: "UNKNOWN",
		1: "DUPLICATE_VOTE",
		2: "LIGHT_CLIENT_ATTACK",
	}
	EvidenceType_value = map[string]int32{
		"UNKNOWN":             0,
		"DUPLICATE_VOTE":      1,
		"LIGHT_CLIENT_ATTACK": 2,
	}
)

func (x EvidenceType) Enum() *EvidenceType {
	p := new(EvidenceType)
	*p = x
	return p
}

func (x EvidenceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EvidenceType) Descriptor() protoreflect.EnumDescriptor {
	return file_aspect_v2_cosmos_type_proto_enumTypes[0].Descriptor()
}

func (EvidenceType) Type() protoreflect.EnumType {
	return &file_aspect_v2_cosmos_type_proto_enumTypes[0]
}

func (x EvidenceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EvidenceType.Descriptor instead.
func (EvidenceType) EnumDescriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{0}
}

type GasMeter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GasConsumed        uint64 `protobuf:"varint,1,opt,name=gas_consumed,json=gasConsumed,proto3" json:"gas_consumed,omitempty"`
	GasConsumedToLimit uint64 `protobuf:"varint,2,opt,name=gas_consumed_to_limit,json=gasConsumedToLimit,proto3" json:"gas_consumed_to_limit,omitempty"`
	GasRemaining       uint64 `protobuf:"varint,3,opt,name=gas_remaining,json=gasRemaining,proto3" json:"gas_remaining,omitempty"`
	Limit              uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GasMeter) Reset() {
	*x = GasMeter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasMeter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasMeter) ProtoMessage() {}

func (x *GasMeter) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasMeter.ProtoReflect.Descriptor instead.
func (*GasMeter) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{0}
}

func (x *GasMeter) GetGasConsumed() uint64 {
	if x != nil {
		return x.GasConsumed
	}
	return 0
}

func (x *GasMeter) GetGasConsumedToLimit() uint64 {
	if x != nil {
		return x.GasConsumedToLimit
	}
	return 0
}

func (x *GasMeter) GetGasRemaining() uint64 {
	if x != nil {
		return x.GasRemaining
	}
	return 0
}

func (x *GasMeter) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type DecCoin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denom  string `protobuf:"bytes,1,opt,name=denom,proto3" json:"denom,omitempty"`
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *DecCoin) Reset() {
	*x = DecCoin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecCoin) ProtoMessage() {}

func (x *DecCoin) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecCoin.ProtoReflect.Descriptor instead.
func (*DecCoin) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{1}
}

func (x *DecCoin) GetDenom() string {
	if x != nil {
		return x.Denom
	}
	return ""
}

func (x *DecCoin) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type MinGasPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coins []*DecCoin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
}

func (x *MinGasPrice) Reset() {
	*x = MinGasPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinGasPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinGasPrice) ProtoMessage() {}

func (x *MinGasPrice) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinGasPrice.ProtoReflect.Descriptor instead.
func (*MinGasPrice) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{2}
}

func (x *MinGasPrice) GetCoins() []*DecCoin {
	if x != nil {
		return x.Coins
	}
	return nil
}

type LastCommitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round int32       `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	Votes []*VoteInfo `protobuf:"bytes,2,rep,name=votes,proto3" json:"votes,omitempty"`
}

func (x *LastCommitInfo) Reset() {
	*x = LastCommitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LastCommitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LastCommitInfo) ProtoMessage() {}

func (x *LastCommitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LastCommitInfo.ProtoReflect.Descriptor instead.
func (*LastCommitInfo) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{3}
}

func (x *LastCommitInfo) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *LastCommitInfo) GetVotes() []*VoteInfo {
	if x != nil {
		return x.Votes
	}
	return nil
}

// Validator
type Validator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // The first 20 bytes of SHA256(public key)
	// PubKey pub_key = 2 [(gogoproto.nullable)=false];
	Power int64 `protobuf:"varint,3,opt,name=power,proto3" json:"power,omitempty"` // The voting power
}

func (x *Validator) Reset() {
	*x = Validator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validator) ProtoMessage() {}

func (x *Validator) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validator.ProtoReflect.Descriptor instead.
func (*Validator) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{4}
}

func (x *Validator) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Validator) GetPower() int64 {
	if x != nil {
		return x.Power
	}
	return 0
}

// VoteInfo
type VoteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Validator       *Validator `protobuf:"bytes,1,opt,name=validator,proto3" json:"validator,omitempty"`
	SignedLastBlock bool       `protobuf:"varint,2,opt,name=signed_last_block,json=signedLastBlock,proto3" json:"signed_last_block,omitempty"`
}

func (x *VoteInfo) Reset() {
	*x = VoteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteInfo) ProtoMessage() {}

func (x *VoteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteInfo.ProtoReflect.Descriptor instead.
func (*VoteInfo) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{5}
}

func (x *VoteInfo) GetValidator() *Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *VoteInfo) GetSignedLastBlock() bool {
	if x != nil {
		return x.SignedLastBlock
	}
	return false
}

type EvidenceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Evidences []*Evidence `protobuf:"bytes,1,rep,name=evidences,proto3" json:"evidences,omitempty"`
}

func (x *EvidenceList) Reset() {
	*x = EvidenceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvidenceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvidenceList) ProtoMessage() {}

func (x *EvidenceList) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvidenceList.ProtoReflect.Descriptor instead.
func (*EvidenceList) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{6}
}

func (x *EvidenceList) GetEvidences() []*Evidence {
	if x != nil {
		return x.Evidences
	}
	return nil
}

type Evidence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type EvidenceType `protobuf:"varint,1,opt,name=type,proto3,enum=aspect.v2.EvidenceType" json:"type,omitempty"`
	// The offending validator
	Validator *Validator `protobuf:"bytes,2,opt,name=validator,proto3" json:"validator,omitempty"`
	// The height when the offense occurred
	Height int64 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// The corresponding time where the offense occurred
	Time int64 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	// Total voting power of the validator set in case the ABCI application does
	// not store historical validators.
	// https://github.com/tendermint/tendermint/issues/4581
	TotalVotingPower int64 `protobuf:"varint,5,opt,name=total_voting_power,json=totalVotingPower,proto3" json:"total_voting_power,omitempty"`
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{7}
}

func (x *Evidence) GetType() EvidenceType {
	if x != nil {
		return x.Type
	}
	return EvidenceType_UNKNOWN
}

func (x *Evidence) GetValidator() *Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *Evidence) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Evidence) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Evidence) GetTotalVotingPower() int64 {
	if x != nil {
		return x.TotalVotingPower
	}
	return 0
}

type PartSetHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Hash  []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *PartSetHeader) Reset() {
	*x = PartSetHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartSetHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartSetHeader) ProtoMessage() {}

func (x *PartSetHeader) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartSetHeader.ProtoReflect.Descriptor instead.
func (*PartSetHeader) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{8}
}

func (x *PartSetHeader) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PartSetHeader) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// BlockID
type BlockID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash          []byte         `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PartSetHeader *PartSetHeader `protobuf:"bytes,2,opt,name=part_set_header,json=partSetHeader,proto3" json:"part_set_header,omitempty"`
}

func (x *BlockID) Reset() {
	*x = BlockID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockID) ProtoMessage() {}

func (x *BlockID) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockID.ProtoReflect.Descriptor instead.
func (*BlockID) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{9}
}

func (x *BlockID) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *BlockID) GetPartSetHeader() *PartSetHeader {
	if x != nil {
		return x.PartSetHeader
	}
	return nil
}

type BlockParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxBytes int64 `protobuf:"varint,1,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
	// Note: must be greater or equal to -1
	MaxGas int64 `protobuf:"varint,2,opt,name=max_gas,json=maxGas,proto3" json:"max_gas,omitempty"`
}

func (x *BlockParams) Reset() {
	*x = BlockParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockParams) ProtoMessage() {}

func (x *BlockParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockParams.ProtoReflect.Descriptor instead.
func (*BlockParams) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{10}
}

func (x *BlockParams) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

func (x *BlockParams) GetMaxGas() int64 {
	if x != nil {
		return x.MaxGas
	}
	return 0
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppVersion uint32 `protobuf:"varint,1,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{11}
}

func (x *Version) GetAppVersion() uint32 {
	if x != nil {
		return x.AppVersion
	}
	return 0
}

type ConsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *BlockParams     `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Evidence  *EvidenceParams  `protobuf:"bytes,2,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Validator *ValidatorParams `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
	Version   *VersionParams   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ConsParams) Reset() {
	*x = ConsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsParams) ProtoMessage() {}

func (x *ConsParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsParams.ProtoReflect.Descriptor instead.
func (*ConsParams) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{12}
}

func (x *ConsParams) GetBlock() *BlockParams {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *ConsParams) GetEvidence() *EvidenceParams {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *ConsParams) GetValidator() *ValidatorParams {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *ConsParams) GetVersion() *VersionParams {
	if x != nil {
		return x.Version
	}
	return nil
}

// EvidenceParams determine how we handle evidence of malfeasance.
type EvidenceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Max age of evidence, in blocks.
	//
	// The basic formula for calculating this is: MaxAgeDuration / {average block
	// time}.
	MaxAgeNumBlocks int64 `protobuf:"varint,1,opt,name=max_age_num_blocks,json=maxAgeNumBlocks,proto3" json:"max_age_num_blocks,omitempty"`
	MaxAgeDuration  int64 `protobuf:"varint,2,opt,name=max_age_duration,json=maxAgeDuration,proto3" json:"max_age_duration,omitempty"`
	// This sets the maximum size of total evidence in bytes that can be committed in a single block.
	// and should fall comfortably under the max block bytes.
	// Default is 1048576 or 1MB
	MaxBytes int64 `protobuf:"varint,3,opt,name=max_bytes,json=maxBytes,proto3" json:"max_bytes,omitempty"`
}

func (x *EvidenceParams) Reset() {
	*x = EvidenceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvidenceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvidenceParams) ProtoMessage() {}

func (x *EvidenceParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvidenceParams.ProtoReflect.Descriptor instead.
func (*EvidenceParams) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{13}
}

func (x *EvidenceParams) GetMaxAgeNumBlocks() int64 {
	if x != nil {
		return x.MaxAgeNumBlocks
	}
	return 0
}

func (x *EvidenceParams) GetMaxAgeDuration() int64 {
	if x != nil {
		return x.MaxAgeDuration
	}
	return 0
}

func (x *EvidenceParams) GetMaxBytes() int64 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

type ValidatorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKeyTypes []string `protobuf:"bytes,1,rep,name=pub_key_types,json=pubKeyTypes,proto3" json:"pub_key_types,omitempty"`
}

func (x *ValidatorParams) Reset() {
	*x = ValidatorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatorParams) ProtoMessage() {}

func (x *ValidatorParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatorParams.ProtoReflect.Descriptor instead.
func (*ValidatorParams) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{14}
}

func (x *ValidatorParams) GetPubKeyTypes() []string {
	if x != nil {
		return x.PubKeyTypes
	}
	return nil
}

// VersionParams contains the ABCI application version.
type VersionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppVersion uint64 `protobuf:"varint,1,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
}

func (x *VersionParams) Reset() {
	*x = VersionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionParams) ProtoMessage() {}

func (x *VersionParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionParams.ProtoReflect.Descriptor instead.
func (*VersionParams) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{15}
}

func (x *VersionParams) GetAppVersion() uint64 {
	if x != nil {
		return x.AppVersion
	}
	return 0
}

type EvmParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EvmDenom string `protobuf:"bytes,1,opt,name=evm_denom,json=evmDenom,proto3" json:"evm_denom,omitempty"`
	// enable_create toggles state transitions that use the vm.Create function
	EnableCreate bool `protobuf:"varint,2,opt,name=enable_create,json=enableCreate,proto3" json:"enable_create,omitempty"`
	// enable_call toggles state transitions that use the vm.Call function
	EnableCall bool `protobuf:"varint,3,opt,name=enable_call,json=enableCall,proto3" json:"enable_call,omitempty"`
	// extra_eips defines the additional EIPs for the vm.Config
	ExtraEips           []int64 `protobuf:"varint,4,rep,packed,name=extra_eips,json=extraEips,proto3" json:"extra_eips,omitempty"`
	AllowUnprotectedTxs bool    `protobuf:"varint,5,opt,name=allow_unprotected_txs,json=allowUnprotectedTxs,proto3" json:"allow_unprotected_txs,omitempty"`
}

func (x *EvmParams) Reset() {
	*x = EvmParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EvmParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmParams) ProtoMessage() {}

func (x *EvmParams) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmParams.ProtoReflect.Descriptor instead.
func (*EvmParams) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{16}
}

func (x *EvmParams) GetEvmDenom() string {
	if x != nil {
		return x.EvmDenom
	}
	return ""
}

func (x *EvmParams) GetEnableCreate() bool {
	if x != nil {
		return x.EnableCreate
	}
	return false
}

func (x *EvmParams) GetEnableCall() bool {
	if x != nil {
		return x.EnableCall
	}
	return false
}

func (x *EvmParams) GetExtraEips() []int64 {
	if x != nil {
		return x.ExtraEips
	}
	return nil
}

func (x *EvmParams) GetAllowUnprotectedTxs() bool {
	if x != nil {
		return x.AllowUnprotectedTxs
	}
	return false
}

type Clique struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period uint64 `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	Epoch  uint64 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
}

func (x *Clique) Reset() {
	*x = Clique{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clique) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clique) ProtoMessage() {}

func (x *Clique) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clique.ProtoReflect.Descriptor instead.
func (*Clique) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{17}
}

func (x *Clique) GetPeriod() uint64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *Clique) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

type ChainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId                       string  `protobuf:"bytes,1,opt,name=chainId,proto3" json:"chainId,omitempty"`
	HomesteadBlock                string  `protobuf:"bytes,2,opt,name=homestead_block,json=homesteadBlock,proto3" json:"homestead_block,omitempty"`
	DaoForkBlock                  string  `protobuf:"bytes,3,opt,name=dao_fork_block,json=daoForkBlock,proto3" json:"dao_fork_block,omitempty"`
	DaoForkSupport                bool    `protobuf:"varint,4,opt,name=dao_fork_support,json=daoForkSupport,proto3" json:"dao_fork_support,omitempty"`
	Eip150Block                   string  `protobuf:"bytes,5,opt,name=eip150_block,json=eip150Block,proto3" json:"eip150_block,omitempty"`
	Eip150Hash                    string  `protobuf:"bytes,6,opt,name=eip150_hash,json=eip150Hash,proto3" json:"eip150_hash,omitempty"`
	Eip155Block                   string  `protobuf:"bytes,7,opt,name=eip155_block,json=eip155Block,proto3" json:"eip155_block,omitempty"`
	Eip158Block                   string  `protobuf:"bytes,8,opt,name=eip158_block,json=eip158Block,proto3" json:"eip158_block,omitempty"`
	ByzantiumBlock                string  `protobuf:"bytes,9,opt,name=byzantium_block,json=byzantiumBlock,proto3" json:"byzantium_block,omitempty"`
	ConstantinopleBlock           string  `protobuf:"bytes,10,opt,name=constantinople_block,json=constantinopleBlock,proto3" json:"constantinople_block,omitempty"`
	PetersburgBlock               string  `protobuf:"bytes,11,opt,name=petersburg_block,json=petersburgBlock,proto3" json:"petersburg_block,omitempty"`
	IstanbulBlock                 string  `protobuf:"bytes,12,opt,name=istanbul_block,json=istanbulBlock,proto3" json:"istanbul_block,omitempty"`
	MuirGlacierBlock              string  `protobuf:"bytes,13,opt,name=muir_glacier_block,json=muirGlacierBlock,proto3" json:"muir_glacier_block,omitempty"`
	BerlinBlock                   string  `protobuf:"bytes,14,opt,name=berlin_block,json=berlinBlock,proto3" json:"berlin_block,omitempty"`
	LondonBlock                   string  `protobuf:"bytes,15,opt,name=london_block,json=londonBlock,proto3" json:"london_block,omitempty"`
	ArrowGlacierBlock             string  `protobuf:"bytes,16,opt,name=arrow_glacier_block,json=arrowGlacierBlock,proto3" json:"arrow_glacier_block,omitempty"`
	GrayGlacierBlock              string  `protobuf:"bytes,17,opt,name=gray_glacier_block,json=grayGlacierBlock,proto3" json:"gray_glacier_block,omitempty"`
	MergeNetsplitBlock            string  `protobuf:"bytes,18,opt,name=merge_netsplit_block,json=mergeNetsplitBlock,proto3" json:"merge_netsplit_block,omitempty"`
	ShanghaiBlock                 string  `protobuf:"bytes,19,opt,name=shanghai_block,json=shanghaiBlock,proto3" json:"shanghai_block,omitempty"`
	CancunBlock                   string  `protobuf:"bytes,20,opt,name=cancun_block,json=cancunBlock,proto3" json:"cancun_block,omitempty"`
	TerminalTotalDifficulty       string  `protobuf:"bytes,21,opt,name=terminal_total_difficulty,json=terminalTotalDifficulty,proto3" json:"terminal_total_difficulty,omitempty"`
	TerminalTotalDifficultyPassed bool    `protobuf:"varint,22,opt,name=terminal_total_difficulty_passed,json=terminalTotalDifficultyPassed,proto3" json:"terminal_total_difficulty_passed,omitempty"`
	Clique                        *Clique `protobuf:"bytes,23,opt,name=clique,proto3" json:"clique,omitempty"`
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{18}
}

func (x *ChainConfig) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ChainConfig) GetHomesteadBlock() string {
	if x != nil {
		return x.HomesteadBlock
	}
	return ""
}

func (x *ChainConfig) GetDaoForkBlock() string {
	if x != nil {
		return x.DaoForkBlock
	}
	return ""
}

func (x *ChainConfig) GetDaoForkSupport() bool {
	if x != nil {
		return x.DaoForkSupport
	}
	return false
}

func (x *ChainConfig) GetEip150Block() string {
	if x != nil {
		return x.Eip150Block
	}
	return ""
}

func (x *ChainConfig) GetEip150Hash() string {
	if x != nil {
		return x.Eip150Hash
	}
	return ""
}

func (x *ChainConfig) GetEip155Block() string {
	if x != nil {
		return x.Eip155Block
	}
	return ""
}

func (x *ChainConfig) GetEip158Block() string {
	if x != nil {
		return x.Eip158Block
	}
	return ""
}

func (x *ChainConfig) GetByzantiumBlock() string {
	if x != nil {
		return x.ByzantiumBlock
	}
	return ""
}

func (x *ChainConfig) GetConstantinopleBlock() string {
	if x != nil {
		return x.ConstantinopleBlock
	}
	return ""
}

func (x *ChainConfig) GetPetersburgBlock() string {
	if x != nil {
		return x.PetersburgBlock
	}
	return ""
}

func (x *ChainConfig) GetIstanbulBlock() string {
	if x != nil {
		return x.IstanbulBlock
	}
	return ""
}

func (x *ChainConfig) GetMuirGlacierBlock() string {
	if x != nil {
		return x.MuirGlacierBlock
	}
	return ""
}

func (x *ChainConfig) GetBerlinBlock() string {
	if x != nil {
		return x.BerlinBlock
	}
	return ""
}

func (x *ChainConfig) GetLondonBlock() string {
	if x != nil {
		return x.LondonBlock
	}
	return ""
}

func (x *ChainConfig) GetArrowGlacierBlock() string {
	if x != nil {
		return x.ArrowGlacierBlock
	}
	return ""
}

func (x *ChainConfig) GetGrayGlacierBlock() string {
	if x != nil {
		return x.GrayGlacierBlock
	}
	return ""
}

func (x *ChainConfig) GetMergeNetsplitBlock() string {
	if x != nil {
		return x.MergeNetsplitBlock
	}
	return ""
}

func (x *ChainConfig) GetShanghaiBlock() string {
	if x != nil {
		return x.ShanghaiBlock
	}
	return ""
}

func (x *ChainConfig) GetCancunBlock() string {
	if x != nil {
		return x.CancunBlock
	}
	return ""
}

func (x *ChainConfig) GetTerminalTotalDifficulty() string {
	if x != nil {
		return x.TerminalTotalDifficulty
	}
	return ""
}

func (x *ChainConfig) GetTerminalTotalDifficultyPassed() bool {
	if x != nil {
		return x.TerminalTotalDifficultyPassed
	}
	return false
}

func (x *ChainConfig) GetClique() *Clique {
	if x != nil {
		return x.Clique
	}
	return nil
}

type EnvContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseFee uint64 `protobuf:"varint,1,opt,name=base_fee,json=baseFee,proto3" json:"base_fee,omitempty"`
}

func (x *EnvContent) Reset() {
	*x = EnvContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvContent) ProtoMessage() {}

func (x *EnvContent) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvContent.ProtoReflect.Descriptor instead.
func (*EnvContent) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{19}
}

func (x *EnvContent) GetBaseFee() uint64 {
	if x != nil {
		return x.BaseFee
	}
	return 0
}

type TxExtProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property map[string]string `protobuf:"bytes,1,rep,name=property,proto3" json:"property,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TxExtProperty) Reset() {
	*x = TxExtProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aspect_v2_cosmos_type_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxExtProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxExtProperty) ProtoMessage() {}

func (x *TxExtProperty) ProtoReflect() protoreflect.Message {
	mi := &file_aspect_v2_cosmos_type_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxExtProperty.ProtoReflect.Descriptor instead.
func (*TxExtProperty) Descriptor() ([]byte, []int) {
	return file_aspect_v2_cosmos_type_proto_rawDescGZIP(), []int{20}
}

func (x *TxExtProperty) GetProperty() map[string]string {
	if x != nil {
		return x.Property
	}
	return nil
}

var File_aspect_v2_cosmos_type_proto protoreflect.FileDescriptor

var file_aspect_v2_cosmos_type_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x61,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x22, 0x9b, 0x01, 0x0a, 0x08, 0x47, 0x61, 0x73,
	0x4d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x67, 0x61, 0x73,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x67, 0x61, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x67, 0x61, 0x73, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x64, 0x54, 0x6f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x67, 0x61, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x37, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x43, 0x6f, 0x69,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x37, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x63, 0x43, 0x6f, 0x69,
	0x6e, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x51, 0x0a, 0x0e, 0x4c, 0x61, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x3b, 0x0a, 0x09, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x08, 0x56, 0x6f, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x61, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x41, 0x0a, 0x0c, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x65, 0x76,
	0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x08, 0x45, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x32, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x22,
	0x39, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x74, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x5f, 0x0a, 0x07, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x61, 0x72,
	0x74, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x70, 0x61,
	0x72, 0x74, 0x53, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x43, 0x0a, 0x0b, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x67,
	0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x73,
	0x22, 0x29, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xdf, 0x01, 0x0a, 0x0a,
	0x43, 0x6f, 0x6e, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x08, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01,
	0x0a, 0x0e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61,
	0x78, 0x41, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x41, 0x67, 0x65, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0f, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0d, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x70, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc1, 0x01,
	0x0a, 0x09, 0x45, 0x76, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x76, 0x6d, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x76, 0x6d, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x65, 0x69, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x45, 0x69, 0x70, 0x73, 0x12, 0x32, 0x0a,
	0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x55, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x78,
	0x73, 0x22, 0x36, 0x0a, 0x06, 0x43, 0x6c, 0x69, 0x71, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x22, 0xd6, 0x07, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x65, 0x61, 0x64,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0e,
	0x64, 0x61, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x61, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6b, 0x5f, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x61,
	0x6f, 0x46, 0x6f, 0x72, 0x6b, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x69, 0x70, 0x31, 0x35, 0x30, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35, 0x30, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35, 0x30, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x69, 0x70, 0x31, 0x35, 0x30, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35, 0x35, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x69, 0x70, 0x31, 0x35, 0x38, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x69, 0x70, 0x31, 0x35,
	0x38, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74,
	0x69, 0x75, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x62, 0x79, 0x7a, 0x61, 0x6e, 0x74, 0x69, 0x75, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x31, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c,
	0x65, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x6f, 0x70, 0x6c, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x65, 0x74, 0x65, 0x72, 0x73, 0x62, 0x75, 0x72, 0x67,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x62, 0x75, 0x72, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x25, 0x0a,
	0x0e, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x62, 0x75, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x62, 0x75, 0x6c, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x75, 0x69, 0x72, 0x5f, 0x67, 0x6c, 0x61,
	0x63, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6d, 0x75, 0x69, 0x72, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x6e, 0x64, 0x6f, 0x6e, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x6e,
	0x64, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x72, 0x72, 0x6f,
	0x77, 0x5f, 0x67, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x47, 0x6c, 0x61, 0x63,
	0x69, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72, 0x61, 0x79,
	0x5f, 0x67, 0x6c, 0x61, 0x63, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x72, 0x61, 0x79, 0x47, 0x6c, 0x61, 0x63, 0x69, 0x65,
	0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x5f,
	0x6e, 0x65, 0x74, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x4e, 0x65, 0x74, 0x73, 0x70,
	0x6c, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x6e,
	0x67, 0x68, 0x61, 0x69, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x68, 0x61, 0x6e, 0x67, 0x68, 0x61, 0x69, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x63, 0x75, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x75, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x3a, 0x0a, 0x19, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x47,
	0x0a, 0x20, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x71, 0x75,
	0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x6c, 0x69, 0x71, 0x75, 0x65, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x71,
	0x75, 0x65, 0x22, 0x27, 0x0a, 0x0a, 0x45, 0x6e, 0x76, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0d,
	0x54, 0x78, 0x45, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x42, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x78, 0x45, 0x78,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x1a, 0x3b, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x48,
	0x0a, 0x0c, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x44,
	0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f,
	0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x42, 0x90, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x2e, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x43, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x6c, 0x61,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x74, 0x65, 0x6c, 0x61, 0x73,
	0x64, 0x6b, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02,
	0x09, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x09, 0x41, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x15, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x5c,
	0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0a, 0x41, 0x73, 0x70, 0x65, 0x63, 0x74, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_aspect_v2_cosmos_type_proto_rawDescOnce sync.Once
	file_aspect_v2_cosmos_type_proto_rawDescData = file_aspect_v2_cosmos_type_proto_rawDesc
)

func file_aspect_v2_cosmos_type_proto_rawDescGZIP() []byte {
	file_aspect_v2_cosmos_type_proto_rawDescOnce.Do(func() {
		file_aspect_v2_cosmos_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_aspect_v2_cosmos_type_proto_rawDescData)
	})
	return file_aspect_v2_cosmos_type_proto_rawDescData
}

var file_aspect_v2_cosmos_type_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_aspect_v2_cosmos_type_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_aspect_v2_cosmos_type_proto_goTypes = []interface{}{
	(EvidenceType)(0),       // 0: aspect.v2.EvidenceType
	(*GasMeter)(nil),        // 1: aspect.v2.GasMeter
	(*DecCoin)(nil),         // 2: aspect.v2.DecCoin
	(*MinGasPrice)(nil),     // 3: aspect.v2.MinGasPrice
	(*LastCommitInfo)(nil),  // 4: aspect.v2.LastCommitInfo
	(*Validator)(nil),       // 5: aspect.v2.Validator
	(*VoteInfo)(nil),        // 6: aspect.v2.VoteInfo
	(*EvidenceList)(nil),    // 7: aspect.v2.EvidenceList
	(*Evidence)(nil),        // 8: aspect.v2.Evidence
	(*PartSetHeader)(nil),   // 9: aspect.v2.PartSetHeader
	(*BlockID)(nil),         // 10: aspect.v2.BlockID
	(*BlockParams)(nil),     // 11: aspect.v2.BlockParams
	(*Version)(nil),         // 12: aspect.v2.Version
	(*ConsParams)(nil),      // 13: aspect.v2.ConsParams
	(*EvidenceParams)(nil),  // 14: aspect.v2.EvidenceParams
	(*ValidatorParams)(nil), // 15: aspect.v2.ValidatorParams
	(*VersionParams)(nil),   // 16: aspect.v2.VersionParams
	(*EvmParams)(nil),       // 17: aspect.v2.EvmParams
	(*Clique)(nil),          // 18: aspect.v2.Clique
	(*ChainConfig)(nil),     // 19: aspect.v2.ChainConfig
	(*EnvContent)(nil),      // 20: aspect.v2.EnvContent
	(*TxExtProperty)(nil),   // 21: aspect.v2.TxExtProperty
	nil,                     // 22: aspect.v2.TxExtProperty.PropertyEntry
}
var file_aspect_v2_cosmos_type_proto_depIdxs = []int32{
	2,  // 0: aspect.v2.MinGasPrice.coins:type_name -> aspect.v2.DecCoin
	6,  // 1: aspect.v2.LastCommitInfo.votes:type_name -> aspect.v2.VoteInfo
	5,  // 2: aspect.v2.VoteInfo.validator:type_name -> aspect.v2.Validator
	8,  // 3: aspect.v2.EvidenceList.evidences:type_name -> aspect.v2.Evidence
	0,  // 4: aspect.v2.Evidence.type:type_name -> aspect.v2.EvidenceType
	5,  // 5: aspect.v2.Evidence.validator:type_name -> aspect.v2.Validator
	9,  // 6: aspect.v2.BlockID.part_set_header:type_name -> aspect.v2.PartSetHeader
	11, // 7: aspect.v2.ConsParams.block:type_name -> aspect.v2.BlockParams
	14, // 8: aspect.v2.ConsParams.evidence:type_name -> aspect.v2.EvidenceParams
	15, // 9: aspect.v2.ConsParams.validator:type_name -> aspect.v2.ValidatorParams
	16, // 10: aspect.v2.ConsParams.version:type_name -> aspect.v2.VersionParams
	18, // 11: aspect.v2.ChainConfig.clique:type_name -> aspect.v2.Clique
	22, // 12: aspect.v2.TxExtProperty.property:type_name -> aspect.v2.TxExtProperty.PropertyEntry
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_aspect_v2_cosmos_type_proto_init() }
func file_aspect_v2_cosmos_type_proto_init() {
	if File_aspect_v2_cosmos_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aspect_v2_cosmos_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasMeter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecCoin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinGasPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LastCommitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvidenceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Evidence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartSetHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvidenceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EvmParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clique); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aspect_v2_cosmos_type_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxExtProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aspect_v2_cosmos_type_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_aspect_v2_cosmos_type_proto_goTypes,
		DependencyIndexes: file_aspect_v2_cosmos_type_proto_depIdxs,
		EnumInfos:         file_aspect_v2_cosmos_type_proto_enumTypes,
		MessageInfos:      file_aspect_v2_cosmos_type_proto_msgTypes,
	}.Build()
	File_aspect_v2_cosmos_type_proto = out.File
	file_aspect_v2_cosmos_type_proto_rawDesc = nil
	file_aspect_v2_cosmos_type_proto_goTypes = nil
	file_aspect_v2_cosmos_type_proto_depIdxs = nil
}
