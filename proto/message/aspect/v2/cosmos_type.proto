
syntax = "proto3";
package aspect.v2;
import "google/protobuf/timestamp.proto";
option go_package = "github.com/artela-network/artelasdk/types";


message GasMeter {
  uint32 gasConsumed = 1;
  uint32 gasConsumedToLimit = 2;
  uint32 gasRemaining = 3;
  uint32 limit = 4;
}
message DecCoin {
  string denom  = 1;
  string amount = 2;
}
message MinGasPrice{
  repeated DecCoin coins=1;
}

message LastCommitInfo {
  int32             round = 1;
  repeated VoteInfo votes = 2 ;
}
// Validator
message Validator {
  bytes address = 1;  // The first 20 bytes of SHA256(public key)
  // PubKey pub_key = 2 [(gogoproto.nullable)=false];
  int64 power = 3;  // The voting power
}


// VoteInfo
message VoteInfo {
  Validator validator         = 1 ;
  bool      signed_last_block = 2;
}

enum EvidenceType {
  UNKNOWN             = 0;
  DUPLICATE_VOTE      = 1;
  LIGHT_CLIENT_ATTACK = 2;
}

message Evidence {
  EvidenceType type = 1;
  // The offending validator
  Validator validator = 2 ;
  // The height when the offense occurred
  int64 height = 3;
  // The corresponding time where the offense occurred
  google.protobuf.Timestamp time = 4;
  // Total voting power of the validator set in case the ABCI application does
  // not store historical validators.
  // https://github.com/tendermint/tendermint/issues/4581
  int64 total_voting_power = 5;
}

message PartSetHeader {
  uint32 total = 1;
  bytes  hash  = 2;
}

// BlockID
message BlockID {
  bytes         hash            = 1;
  PartSetHeader part_set_header = 2;
}

message BlockParams {
  uint32 maxBytes = 1;
  int32 maxGas = 2;
}


message Version {
  uint32 appVersion = 1;
}

message ConsParams {
  BlockParams block = 1;
  Evidence evidence = 2;
  Validator validator = 3;
  Version version = 4;
}

message EvmParams {
  string evmDenom = 1;
  bool enableCreate = 2;
  bool enableCall = 3;
  repeated uint32 extraEips = 4;
  bool allowUnprotectedTxs = 5;
}

message Ethash {
  uint32 epoch = 1;
  string fullForkThreshold = 2;
  string blockReward = 3;
  repeated string difficultyBombDelays = 4;
  string inception = 5;
}

message Clique {
  uint32 period = 1;
  uint32 epoch = 2;
}

message ChainConfig {
  string chainId = 1;
  string homesteadBlock = 2;
  string daoForkBlock = 3;
  bool daoForkSupport = 4;
  string eip150Block = 5;
  string eip150Hash = 6;
  string eip155Block = 7;
  string eip158Block = 8;
  string byzantiumBlock = 9;
  string constantinopleBlock = 10;
  string petersburgBlock = 11;
  string istanbulBlock = 12;
  string muirGlacierBlock = 13;
  string berlinBlock = 14;
  string londonBlock = 15;
  string arrowGlacierBlock = 16;
  string grayGlacierBlock = 17;
  string mergeNetsplitBlock = 18;
  string shanghaiBlock = 19;
  string cancunBlock = 20;
  string terminalTotalDifficulty = 21;
  bool terminalTotalDifficultyPassed = 22;
  Ethash ethash = 23;
  Clique clique = 24;
}

message EnvContent {
  uint32 baseFee = 1;
}

message TxExtProperty{
  map<string,string> property=1;
}